{"version":3,"sources":["App.js","index.js"],"names":["App","canvas","document","getElementById","ctx","getContext","background","Image","topPipe","bottomPipe","bird1","bird2","bird3","birds","src","width","height","console","log","flight","flyHeight","currentScore","pipes","gamePlaying","size","cTenth","spaceBetweenPipe","index","bestScore","window","innerHeight","pipeGap","pipeLoc","Math","random","setup","Array","fill","map","a","i","onload","render","drawImage","pipe","max","slice","length","every","elem","min","fillText","font","innerHTML","requestAnimationFrame","addEventListener","onclick","className","id","Component","bridge","send","ReactDOM"],"mappings":"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","file":"static/js/main.4ef0d617.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\n// import '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst canvas = document.getElementById('canvas');\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\t\r\n\t\tconst background = new Image()\r\n\t\tconst topPipe = new Image()\r\n\t\tconst bottomPipe = new Image()\r\n\t\tconst bird1 = new Image()\r\n\t\tconst bird2 = new Image()\r\n\t\tconst bird3 = new Image()\r\n\t\tconst birds = [bird1, bird2, bird3]\r\n\t\t\r\n\t\tbackground.src = \"https://i.ibb.co/TH4dXYh/background.png\"\r\n\t\ttopPipe.src = \"https://i.ibb.co/Sv0gWQt/topPipe.png\"\r\n\t\tbottomPipe.src = \"https://i.ibb.co/5BvD5Lw/bottom-Pipe.png\"\r\n\t\tbird1.src = \"https://i.ibb.co/mt8098S/bird1.png\"\r\n\t\tbird2.src = \"https://i.ibb.co/Vw854hc/bird2.png\"\r\n\t\tbird3.src = \"https://i.ibb.co/C2c7cWP/bird3.png\"\r\n\r\n\t\tif (topPipe.width === bottomPipe.width && topPipe.height === bottomPipe.height)\r\n\t\t\tconsole.log(\"Correct\")\r\n\t\telse\r\n\t\t\tconsole.log(\"INCORRECT\")\r\n\r\n\r\n// general settings\r\n\t\tlet gamePlaying = false;\r\n\t\tconst gravity = .5;\r\n\t\tconst speed = 6.2;\r\n\t\tconst size = [bird1.width, bird1.height];\r\n\t\tconst jump = -11.5;\r\n\t\tconst cTenth = (canvas.width / 10);\r\n\t\tconst spaceBetweenPipe = 4 * size[0]\r\n\r\n\t\tconst kHeight = canvas.height / 768;\r\n\t\tconst kWidth = canvas.width / 431;\r\n\r\n\t\tlet index = 0,\r\n\t\t\tbestScore = 0,\r\n\t\t\tflight,\r\n\t\t\tflyHeight,\r\n\t\t\tcurrentScore,\r\n\t\t\tpipes;\r\n\r\n\r\n\r\n\t\tcanvas.height = window.innerHeight;\r\n\r\n\t\tconsole.log(canvas.width, canvas.height)\r\n\r\n\r\n\r\n\r\n\r\n// pipe settings\r\n\t\tconst pipeGap = 0.7 * canvas.width;\r\n\t\tconst pipeLoc = () => ((Math.random() * (canvas.height - spaceBetweenPipe)) % topPipe.height);\r\n\r\n\r\n\t\tconst fillEllipse = (x, y, radiusX, radiusY, rotation, color) => {\r\n\t\t\tctx.fillStyle = color;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.ellipse(x, y, radiusX, radiusY, rotation, 0, 2 * Math.PI);\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\r\n\t\tconst setup = () => {\r\n\t\t\tcurrentScore = 0;\r\n\t\t\tflight = jump;\r\n\r\n\t\t\t// set initial flyHeight (middle of screen - size of the bird)\r\n\t\t\tflyHeight = (canvas.height / 2) - (size[1] / 2);\r\n\r\n\t\t\t// setup first 3 pipes\r\n\t\t\tpipes = Array(3).fill().map((a, i) => {\r\n\t\t\t\t// console.log(a, i);\r\n\t\t\t\treturn [canvas.width + (i * (pipeGap + topPipe.width)), pipeLoc()]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst render = () => {\r\n\t\t\t// console.log(\"RENDER\")\r\n\r\n\t\t\t// make the pipe and bird moving\r\n\t\t\tindex++;\r\n\r\n\t\t\t// ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t// background first part\r\n\t\t\tctx.drawImage(background, -((index * (speed / 2)) % canvas.width) + canvas.width, 0, canvas.width, canvas.height);\r\n\t\t\t// background second part\r\n\t\t\tctx.drawImage(background, -(index * (speed / 2)) % canvas.width, 0, canvas.width, canvas.height);\r\n\r\n\r\n\r\n\r\n\t\t\t// pipe display\r\n\t\t\tif (gamePlaying){\r\n\t\t\t\tpipes.map(pipe => {\r\n\t\t\t\t\t// pipe moving\r\n\t\t\t\t\tpipe[0] -= speed;\r\n\r\n\t\t\t\t\t// top pipe\r\n\t\t\t\t\tctx.drawImage(topPipe, pipe[0], pipe[1] - topPipe.height, topPipe.width, topPipe.height);\r\n\t\t\t\t\t// bottom pipe\r\n\t\t\t\t\tctx.drawImage(bottomPipe, pipe[0], pipe[1] + spaceBetweenPipe, bottomPipe.width, bottomPipe.height);\r\n\r\n\r\n\t\t\t\t\t// give 1 point & create new pipe\r\n\t\t\t\t\tif(pipe[0] <= -topPipe.width){\r\n\t\t\t\t\t\tcurrentScore++;\r\n\t\t\t\t\t\t// check if it's the best score\r\n\t\t\t\t\t\tbestScore = Math.max(bestScore, currentScore);\r\n\r\n\t\t\t\t\t\t// remove & create new pipe\r\n\t\t\t\t\t\tpipes = [...pipes.slice(1), [pipes[pipes.length-1][0] + pipeGap + topPipe.width, pipeLoc()]];\r\n\t\t\t\t\t\tconsole.log(pipes);\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tconsole.log([\r\n\t\t\t\t\t\tpipe[0] <= cTenth + size[0],\r\n\t\t\t\t\t\tpipe[0] + topPipe.width >= cTenth,\r\n\t\t\t\t\t\tpipe[1] > flyHeight || ((pipe[1] + spaceBetweenPipe) < (flyHeight + size[1]))\r\n\t\t\t\t\t])\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\t// fillEllipse(pipe[0], pipe[1] + spaceBetweenPipe, 5, 5, 0, 'blue')\r\n\t\t\t\t\t// fillEllipse(cTenth + size[0], flyHeight + size[1], 5, 5, 0, 'red')\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if hit the pipe, end\r\n\t\t\t\t\tif ([\r\n\t\t\t\t\t\tpipe[0] <= cTenth + size[0],\r\n\t\t\t\t\t\tpipe[0] + topPipe.width >= cTenth,\r\n\t\t\t\t\t\tpipe[1] > flyHeight || ((pipe[1] + spaceBetweenPipe) < (flyHeight + size[1]))\r\n\t\t\t\t\t].every(elem => elem)) {\r\n\r\n\t\t\t\t\t\tgamePlaying = false;\r\n\t\t\t\t\t\tsetup();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// draw bird\r\n\t\t\tif (gamePlaying) {\r\n\t\t\t\t// ctx.drawImage(img, 432, Math.floor((index % 9) / 3) * size[1], ...size, cTenth, flyHeight, ...size);\r\n\t\t\t\tctx.drawImage(birds[index % birds.length], cTenth, flyHeight, ...size);\r\n\r\n\t\t\t\tflight += gravity;\r\n\t\t\t\tflyHeight = Math.min(flyHeight + flight, canvas.height - size[1]);\r\n\t\t\t} else {\r\n\t\t\t\t// ctx.drawImage(img, 432, Math.floor((index % 9) / 3) * size[1], ...size, ((canvas.width / 2) - size[0] / 2), flyHeight, ...size);\r\n\t\t\t\tctx.drawImage(birds[index % birds.length], ((canvas.width / 2) - size[0] / 2), flyHeight, ...size);\r\n\r\n\t\t\t\tflyHeight = (canvas.height / 2) - (size[1] / 2);\r\n\r\n\t\t\t\t// text accueil\r\n\t\t\t\tctx.fillText(`Best score : ${bestScore}`, 85, 245);\r\n\t\t\t\tctx.fillText('Click to play', 90, 535);\r\n\t\t\t\tctx.font = \"bold 30px courier\";\r\n\t\t\t}\r\n\r\n\t\t\tdocument.getElementById('bestScore').innerHTML = `Best : ${bestScore}`;\r\n\t\t\tdocument.getElementById('currentScore').innerHTML = `Current : ${currentScore}`;\r\n\r\n\t\t\t// tell the browser to perform anim\r\n\t\t\twindow.requestAnimationFrame(render);\r\n\t\t}\r\n\r\n// launch setup\r\n\t\tsetup();\r\n\t\tbackground.onload = render;\r\n\r\n// start game\r\n\t\tdocument.addEventListener('click', () => {\r\n\t\t\t// console.log(\"addEventListener\")\r\n\t\t\tgamePlaying = true\r\n\t\t});\r\n\t\twindow.onclick = () => {\r\n\t\t\t// console.log(\"onclick\")\r\n\t\t\tflight = jump;\r\n\t\t}\r\n\r\n\t\t// console.log(gamePlaying)\r\n\t}\r\n\r\nrender() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1>Floppy Bird</h1>\r\n\t\t\t\t<div className=\"score-container\">\r\n\t\t\t\t\t<div id=\"bestScore\"></div>\r\n\t\t\t\t\t<div id=\"currentScore\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\r\n\t\t\t<canvas id=\"canvas\" width=\"431\"></canvas>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\nimport './css/index.css'\r\n\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}